# Generated by Django 4.1.7 on 2023-06-04 20:40

import apps.profiles.models
import auto_prefetch
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sessions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("temporal", "Temporal"),
                            ("user_profile", "User profile"),
                            ("template", "Template"),
                        ],
                        default="user_profile",
                        max_length=16,
                    ),
                ),
                ("public", models.BooleanField(default=False)),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=16, null=True, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("fullname", models.CharField(max_length=34, null=True)),
                ("jobtitle", models.CharField(max_length=34, null=True)),
                ("location", models.CharField(max_length=34, null=True)),
                ("birth", models.CharField(max_length=16, null=True)),
                ("phone", models.CharField(max_length=34, null=True)),
                ("email", models.EmailField(max_length=34, null=True)),
                ("website", models.URLField(max_length=32, verbose_name="Website")),
                (
                    "website_label",
                    models.CharField(default="Website label", max_length=16),
                ),
                ("website_active", models.BooleanField(default=True)),
                ("description", models.CharField(max_length=34, null=True)),
                ("description_rows", models.PositiveSmallIntegerField(default=15)),
                (
                    "description_label",
                    models.CharField(default="About me", max_length=16),
                ),
                ("description_active", models.BooleanField(default=True)),
                ("active_photo", models.BooleanField(default=True)),
                (
                    "session",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_set",
                        to="sessions.session",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profile_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("name", models.CharField(max_length=50, verbose_name="üìä Skill")),
                ("level", models.IntegerField(default=50, verbose_name="Level")),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Skills",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.LevelMethodsMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "date",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="üóìÔ∏è Date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=128, verbose_name="üî¨ Publication title"
                    ),
                ),
                (
                    "publisher",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="üìë Publisher"
                    ),
                ),
                (
                    "link",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="üîó Link"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publications",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "title",
                    models.CharField(max_length=64, verbose_name="üåç Project name"),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="üßë\u200düíº Role in the project",
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        max_length=34,
                        null=True,
                        verbose_name="ü§ù Organization",
                    ),
                ),
                (
                    "link",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="üîó Link"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Projects",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full",
                    models.ImageField(
                        null=True, upload_to=apps.profiles.models.get_upload_path
                    ),
                ),
                (
                    "cropped",
                    models.ImageField(
                        null=True, upload_to=apps.profiles.models.get_upload_path
                    ),
                ),
                ("crop_x", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("crop_y", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("crop_width", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "crop_height",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "profile",
                    auto_prefetch.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("name", models.CharField(max_length=50, verbose_name="üó£Ô∏è Language")),
                ("level", models.IntegerField(default=50, verbose_name="Level")),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Language",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.LevelMethodsMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="LabelSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("website", models.CharField(default="Website", max_length=32)),
                ("description", models.CharField(default="About me", max_length=32)),
                ("skill_set", models.CharField(default="Skills", max_length=32)),
                ("language_set", models.CharField(default="Languages", max_length=32)),
                ("education_set", models.CharField(default="Education", max_length=32)),
                (
                    "experience_set",
                    models.CharField(default="Work experience", max_length=32),
                ),
                (
                    "achievement_set",
                    models.CharField(default="Achievements", max_length=32),
                ),
                ("project_set", models.CharField(default="Projects", max_length=32)),
                (
                    "publication_set",
                    models.CharField(default="Publications", max_length=32),
                ),
                (
                    "profile",
                    auto_prefetch.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "start_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è Start date"),
                ),
                (
                    "end_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è End date"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="üìù What did you learn?",
                    ),
                ),
                ("rows", models.PositiveSmallIntegerField(default=10)),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        max_length=34,
                        null=True,
                        verbose_name="üßë\u200düíº Job title",
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=32, verbose_name="üìç Location"),
                ),
                (
                    "company",
                    models.CharField(max_length=32, verbose_name="üè¢ Company name"),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "start_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è Start date"),
                ),
                (
                    "end_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è End date"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="üìù What did you learn?",
                    ),
                ),
                ("rows", models.PositiveSmallIntegerField(default=10)),
                ("title", models.CharField(max_length=64, verbose_name="üéì Title")),
                (
                    "institution",
                    models.CharField(max_length=32, verbose_name="üè´ Institution"),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Education",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ActivationSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("photo", models.BooleanField(default=True)),
                ("jobtitle", models.BooleanField(default=True)),
                ("website", models.BooleanField(default=True)),
                ("description", models.BooleanField(default=True)),
                ("skill_set", models.BooleanField(default=True)),
                ("language_set", models.BooleanField(default=False)),
                ("education_set", models.BooleanField(default=True)),
                ("experience_set", models.BooleanField(default=True)),
                ("achievement_set", models.BooleanField(default=False)),
                ("project_set", models.BooleanField(default=False)),
                ("publication_set", models.BooleanField(default=False)),
                (
                    "profile",
                    auto_prefetch.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "title",
                    models.CharField(max_length=64, verbose_name="üèÜ Goal achieved"),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="üóìÔ∏è Date"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Achievements",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
