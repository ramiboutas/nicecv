# Generated by Django 4.1.7 on 2023-05-25 20:26

import apps.profiles.models
import auto_prefetch
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):
    dependencies = [
        ("profiles", "0023_education_order_education_profile_language"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="education",
            options={
                "base_manager_name": "prefetch_manager",
                "ordering": ("order",),
                "verbose_name": "Education",
            },
        ),
        migrations.AlterModelOptions(
            name="language",
            options={
                "base_manager_name": "prefetch_manager",
                "ordering": ("order",),
                "verbose_name": "Language",
            },
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "issuing_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("authors", models.CharField(blank=True, max_length=200, null=True)),
                ("publisher", models.CharField(blank=True, max_length=100, null=True)),
                ("link", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publications",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.ProfileChildMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.SmallIntegerField(default=0)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("role", models.CharField(blank=True, max_length=100, null=True)),
                ("start_date", models.CharField(blank=True, max_length=100, null=True)),
                ("end_date", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "organization",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("link", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_set",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Projects",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.ProfileChildMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("title", models.CharField(blank=True, max_length=32, null=True)),
                ("location", models.CharField(blank=True, max_length=16, null=True)),
                ("company", models.CharField(blank=True, max_length=16, null=True)),
                ("start_date", models.CharField(blank=True, max_length=16, null=True)),
                ("end_date", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1024, null=True),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.ProfileChildMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("number", models.CharField(blank=True, max_length=15, null=True)),
                ("issuer", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "issuing_date",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("inventors", models.CharField(blank=True, max_length=200, null=True)),
                ("link", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Achievements",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, apps.profiles.models.ProfileChildMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
